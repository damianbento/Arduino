#include <Keypad.h>  
#include <LiquidCrystal_I2C.h> // Libreria LCD_I2C

LiquidCrystal_I2C lcd(0x27,16,2); // si no te sale con esta direccion  puedes usar (0x3f,16,2) || (0x27,16,2)  ||(0x20,16,2) 

const byte FILAS = 4;     // define numero de filas
const byte COLUMNAS = 4;    // define numero de columnas
char keys[FILAS][COLUMNAS] = {    // define la distribucion de teclas
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte pinesFilas[FILAS] = {9,8,7,6};   // pines correspondientes a las filas
byte pinesColumnas[COLUMNAS] = {5,4,3,2}; // pines correspondientes a las columnas

Keypad teclado = Keypad(makeKeymap(keys), pinesFilas, pinesColumnas, FILAS, COLUMNAS);  // crea objeto

char TECLA;       // almacena la tecla presionada
char CLAVE[7];        // almacena en un array 6 digitos ingresados
char CLAVE_MAESTRA[7] = "123456";   // almacena en un array la contrase√±a maestra
byte INDICE = 0;      // indice del array
//int i = 7;
int i = 7;
byte DESD = 0;

void setup() {
  Serial.begin(9600);
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.blink();
 lcd.print("Turns:");
}

void loop() { 

TECLA = teclado.getKey();   // obtiene tecla presionada y asigna a variable
  if (TECLA)        // comprueba que se haya presionado una tecla
  {
    CLAVE[INDICE] = TECLA;    // almacena en array la tecla presionada
    INDICE++;       // incrementa indice en uno
    Serial.print(TECLA);    // envia a monitor serial la tecla presionada
//  lcd.clear();
  
 lcd.setCursor(i++,0);
 
  lcd.print(TECLA);

// SET value //
  
  if (TECLA == 'D'){
  DESD = INDICE - 1;
  CLAVE[DESD] = 0;
  lcd.clear();
  lcd.noBlink();
  lcd.setCursor(0,1);
  lcd.print("SET");
  delay(500);
  lcd.setCursor(0,1);
  lcd.print("Turns:");
  lcd.print(CLAVE);
  }

// RESET ///

if (TECLA == 'C'){
  lcd.clear();
  lcd.setCursor(0,1);
  lcd.print("RESET");
  CLAVE[7] = 0;
  delay(800);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Turns:");
  i = 7;
  }

//start //

 if (TECLA == 'A'){
  lcd.clear();
  lcd.noBlink();
  lcd.setCursor(0,1);
  lcd.print("START");
  delay(1000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Turns to:");
  lcd.setCursor(10,0);
  lcd.print(CLAVE);
  lcd.setCursor(0,1);
  lcd.print("Turns:");
  i = 7;
  } 

//stop //

 if (TECLA == 'B'){

  // Pner aca la secuencia de STOP ///
  
  lcd.clear();
  //lcd.setCursor(2,1);
  //lcd.print("*** STOP ****");
  delay(200);
  for (int p = 0; p <= 10; p++){
  lcd.noBlink();
  delay(500);
  lcd.setCursor(2,1);
  lcd.print("*** STOP ***");
  lcd.blink();
  } 
  } 



  
  }

  if(INDICE == 6)       // si ya se almacenaron los 6 digitos
  {
    if(!strcmp(CLAVE, CLAVE_MAESTRA))   // compara clave ingresada con clave maestra
      Serial.println(" Correcta");  // imprime en monitor serial que es correcta la clave
    else
      Serial.println(" Incorrecta");  // imprime en monitor serial que es incorrecta la clave

    INDICE = 0;
  }
}

 



